@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap');

html, body {
    width: 100%;
    height: 100%;
    margin: 0;
    background-color: #212121;
    font-family: Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
}

* {
    box-sizing: border-box;
}

.btn:not(.btn-floating), .btn-flat:not(.btn-floating), .btn-large:not(.btn-floating), .btn-small:not(.btn-floating) {
    border-radius: 10px !important;
}

[type="checkbox"].filled-in:checked + span:not(.lever)::after {
    background-color: #ffeb3b !important;
    border-color: #ffeb3b !important;
}

.fg-emoji-container nav, .fg-emoji-container nav .nav-wrapper i, .fg-emoji-container nav a.sidenav-trigger, .fg-emoji-container nav a.sidenav-trigger i {
    height: revert;
    line-height: revert;
}
.fg-emoji-container nav {
    width: revert;
    height: revert;
    line-height: revert;
}
.fg-emoji-container .z-depth-1, .fg-emoji-container nav, .fg-emoji-container .card-panel, .fg-emoji-container .card, .fg-emoji-container .toast, .fg-emoji-container .btn, .fg-emoji-container .btn-large, .fg-emoji-container .btn-small, .fg-emoji-container .btn-floating, .fg-emoji-container .dropdown-content, .fg-emoji-container .collapsible, .fg-emoji-container .sidenav {
    -webkit-box-shadow: none;
    box-shadow: none;
}
.fg-emoji-container nav ul li {
    -webkit-transition: revert;
    transition: revert;
    float: revert;
    padding: revert;
}
.fg-emoji-container ul:not(.browser-default) > li {
    list-style-type: revert;
}
.fg-emoji-container nav ul a {
    font-size: revert;
    padding: revert;
}

.fg-emoji-container input {
    background-color: revert !important;
    border: revert !important;
    border-radius: revert !important;
    outline: none !important;
    height: revert !important;
    font-size: revert !important;
    margin: auto !important;
    padding: revert !important;
    -webkit-box-shadow: revert !important;
    box-shadow: revert !important;
    -webkit-box-sizing: revert !important;
    box-sizing: revert !important;
    -webkit-transition: revert !important;
    transition: none !important;
}

.lds-spinner {
    color: official;
    display: inline-block;
    position: relative;
    width: 80px;
    height: 80px;
}
.lds-spinner div {
    transform-origin: 40px 40px;
    animation: lds-spinner 1.2s linear infinite;
}
.lds-spinner div:after {
    content: " ";
    display: block;
    position: absolute;
    top: 3px;
    left: 37px;
    width: 6px;
    height: 18px;
    border-radius: 20%;
    background: #000;
}
.lds-spinner.white-spinner div:after {
    background: #fff;
}
.lds-spinner div:nth-child(1) {
    transform: rotate(0deg);
    animation-delay: -1.1s;
}
.lds-spinner div:nth-child(2) {
    transform: rotate(30deg);
    animation-delay: -1s;
}
.lds-spinner div:nth-child(3) {
    transform: rotate(60deg);
    animation-delay: -0.9s;
}
.lds-spinner div:nth-child(4) {
    transform: rotate(90deg);
    animation-delay: -0.8s;
}
.lds-spinner div:nth-child(5) {
    transform: rotate(120deg);
    animation-delay: -0.7s;
}
.lds-spinner div:nth-child(6) {
    transform: rotate(150deg);
    animation-delay: -0.6s;
}
.lds-spinner div:nth-child(7) {
    transform: rotate(180deg);
    animation-delay: -0.5s;
}
.lds-spinner div:nth-child(8) {
    transform: rotate(210deg);
    animation-delay: -0.4s;
}
.lds-spinner div:nth-child(9) {
    transform: rotate(240deg);
    animation-delay: -0.3s;
}
.lds-spinner div:nth-child(10) {
    transform: rotate(270deg);
    animation-delay: -0.2s;
}
.lds-spinner div:nth-child(11) {
    transform: rotate(300deg);
    animation-delay: -0.1s;
}
.lds-spinner div:nth-child(12) {
    transform: rotate(330deg);
    animation-delay: 0s;
}
@keyframes lds-spinner {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

@keyframes horizontal-rule-animation {
    from { width: 0; }
    to { width: 80vw; }
}

.animated-hr {
    animation-name: horizontal-rule-animation;
    animation-duration: 1s;
    animation-fill-mode: forwards;
    animation-timing-function: cubic-bezier(0, 0, 0, 1);
}
